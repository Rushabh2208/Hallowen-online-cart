@model Ch24ShoppingCartMVC.Models.CartViewModel
@{
    ViewBag.Title = "Checkout";
}
@section css {
    <link href="~/Content/Cart.css" rel="stylesheet" />
}
@{decimal totalPrice = 0.0m;}
@{decimal taxProductPrice = 0.0m;}
<h2>Order Information:</h2>
@if (Model.Cart == null || !Model.Cart.Any())
    {
        <p>You have not selected any items to checkout. Please add stuff to your cart before you checkout!</p>
    }
else
{
    foreach (var item in @Model.Cart)
    {
        <table style="width:100%">
            <tr align=left>
                <th>Product Name</th>
                <th>Individual Price</th>
                <th>Quantity</th>
                <th>Total Product Price</th>
            </tr>
            <tr align=left>
                <td>@item.Name</td>
                <td>$@item.UnitPrice.ToString("0.00")</td>
                <td>@item.Quantity</td>
                <td>@((@item.Quantity * @item.UnitPrice).ToString("c"))</td>
            </tr>
        </table>
        totalPrice += @item.Quantity * @item.UnitPrice;
    }

    <br />
    <h2>Order Subtotal:</h2>
    <span>$@totalPrice.ToString("0.00")</span>

    <br />
    <br />
    
    taxProductPrice = totalPrice * 0.075m;
    <h2>Tax Information:</h2>
    <table style="width:100%">
        <tr align=left>
            <th>Tax Rate</th>
            <th>Estimated Tax to be Collected</th>
        </tr>
        <tr align=left>
            <td>7.5%</td>
            <td>$<span>@taxProductPrice.ToString("0.00")</span></td>
        </tr>
    </table>

    totalPrice += taxProductPrice;
    <br />
    <h2>Order Total:</h2>
    <span>$@totalPrice.ToString("0.00")</span>

    <br />
    <br />

    using (Html.BeginForm("SubmitCheckout", "Checkout", FormMethod.Post))
    {
        <div class="form-horizontal">
            @Html.AntiForgeryToken()

            <h2>Payment Information:</h2>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CreditCardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreditCardNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreditCardNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CardholderName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CardholderName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CardholderName, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CardType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CardType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CardType, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CardProvider, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                @Html.DropDownListFor(model => model.CardProvider, new SelectList(
                 new List<Object>{
                 new { value = "Select Card", text = "Select Card"},
                  new { value = "VISA" , text = "VISA"  },
                  new { value = "MasterCard" , text = "MasterCard" }
               },
             "value",
             "text",
             2))

                    @Html.ValidationMessageFor(model => model.CardProvider, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />



            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />

            <h2>Shipping Address:</h2>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
        </div>

        <h2>Place Order:</h2>
        <input type="submit" id="btnAdd" value="Place Order" />
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
